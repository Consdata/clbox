rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function isAuthentiacted(req) {
    	return request.auth != null
    }
    function authEmail(req) {
    	return request.auth.token.email
    }

    function getUser(user) {
    	return get(/databases/$(database)/documents/user/$(user)).data
    }
    function getTeamUser(team, user) {
    	return get(/databases/$(database)/documents/team/$(team)/user/$(user)).data
    }
    function getChannel (team, channel) {
    	return get(/databases/$(database)/documents/team/$(team)/channel/$(channel)).data
    }

    // read user info for logged user
    match /user/{user} {
    	allow read: if isAuthentiacted(request) && user == authEmail(request)
    }
    // read team info for team members
  	match /team/{team} {
    	allow read: if isAuthentiacted(request) && getUser(authEmail(request)).teams[team] == true
    }
    // read team user info for logged user
    match /team/{team}/user/{user} {
    	allow read: if isAuthentiacted(request) && user == authEmail(request)
    }
    // read team user info user chapter leader
    match /team/{team}/user/{user} {
    	allow read: if isAuthentiacted(request) && getTeamUser(team, user).chapterLeader == authEmail(request)
    }
    // read&write user inbox
    match /team/{team}/inbox/{user}/{document=**} {
    	allow read, write: if isAuthentiacted(request) && user == authEmail(request)
    }
    // read&write user sent
    match /team/{team}/sent/{user}/{document=**} {
    	allow read, write: if isAuthentiacted(request) && user == authEmail(request)
    }
    // read team stats for logged user
  	match /team/{team}/stats/{day} {
    	allow read: if isAuthentiacted(request) && getUser(authEmail(request)).teams[team] == true
    }
    // read&write channel for managers
    match /team/{team}/channel/{channel}/{document=**} {
      allow read, write: if isAuthentiacted(request) && getChannel(team, channel).managerMap[authEmail(request)] == true
    }
    // default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
